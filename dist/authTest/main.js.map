{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/auth/auth-guard.service.ts","./src/app/app.routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/auth/auth.service.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(): void {\n    console.log(this.form);\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n      <img\n        id=\"profile-img\"\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        class=\"profile-img-card\"\n      />\n      <form\n        *ngIf=\"!isSuccessful\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\n        #f=\"ngForm\"\n        novalidate\n      >\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            [(ngModel)]=\"form.username\"\n            required\n            minlength=\"3\"\n            maxlength=\"20\"\n            #username=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n            <div *ngIf=\"username.errors.required\">Username is required</div>\n            <div *ngIf=\"username.errors.minlength\">\n              Username must be at least 3 characters\n            </div>\n            <div *ngIf=\"username.errors.maxlength\">\n              Username must be at most 20 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            required\n            email\n            #email=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n            <div *ngIf=\"email.errors.required\">Email is required</div>\n            <div *ngIf=\"email.errors.email\">\n              Email must be a valid email address\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            required\n            minlength=\"6\"\n            #password=\"ngModel\"\n          />\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\n        </div>\n  \n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n          Signup failed!<br />{{ errorMessage }}\n        </div>\n      </form>\n  \n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n        Your registration is successful!\n      </div>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:61955/Api/Authenticate/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ \n    'Content-Type':'application/json'  \n   })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {       \n    return this.http.post(AUTH_API + 'signin', {            \n      username: credentials.username,\n      password: credentials.password     \n      \n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n  registerAdmin(user): Observable<any> {\n    return this.http.post(AUTH_API + 'register-admin', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  content: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getPublicContent().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n    <header class=\"jumbotron\">\n       \n      <p>{{ content }}</p>\n    </header>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    //console.log(JSON.parse(sessionStorage.getItem(USER_KEY)));\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-user',\n  templateUrl: './board-user.component.html',\n  styleUrls: ['./board-user.component.css']\n})\nexport class BoardUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>board-user works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) {}   \r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component'; \r\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\r\nimport { AuthGuardService as AuthGuard } from './auth/auth-guard.service';\r\nimport { RoleGuardService as RoleGuard } from './auth/role-guard.service';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { \r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard] \r\n  },\r\n  { \r\n    path: 'admin',\r\n    component: BoardAdminComponent,\r\n    canActivate: [AuthGuard] \r\n   // data: {expectedRole: 'admin'} \r\n  },\r\n  { \r\n    path: 'user',\r\n    component: BoardAdminComponent,\r\n    canActivate: [AuthGuard] ,\r\n    data: {expectedRole: 'user'} \r\n  },  \r\n  { path: '**', redirectTo: '' }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\nexport class AppRoutes { }","import { HttpClient } from '@angular/common/http';\nimport { Component,OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  // title = 'authTest';\n  // private roles: string[];\n  // isLoggedIn = false;\n  // showAdminBoard = false;\n  // showModeratorBoard = false;\n  // username: string;\n  \n  constructor(private tokenStorageService: TokenStorageService , private httpClient : HttpClient) { }\n  \n  ngOnInit(): void {\n   \n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    // if (this.isLoggedIn) {\n    //   const user = this.tokenStorageService.getUser(); \n    //   this.roles = user.roles;\n\n    //  this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n    //  this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n    //   this.username = user.name;\n    //   console.log(user);\n    // }\n  }\n\n  // logout(): void {\n  //   this.tokenStorageService.signOut();\n  //   window.location.reload();\n  // }\n  // getDummy() {\n  //   this.httpClient.post(\"http://localhost:61955/Api/Authenticate/getuser\",this.b).subscribe(res => {\n  //     console.log(res);\n  //   })\n  // }\n}\n","<!-- <div id=\"app\">\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">ABC</a>\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\n      <li class=\"nav-item\">\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Home </a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n        <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">avc</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\"> \n    <router-outlet></router-outlet>\n  </div>\n</div> -->\n<app-header></app-header>\n<div class=\"container\">\n <div class=\"container-fluid\">\n   <div class=\"row\">  \n    <router-outlet></router-outlet>\n   </div>\n </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:61955/Api/Authenticate/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'Alluser', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'getuser', { responseType: 'text' });\n  }\n\n  getModeratorBoard(): Observable<any> {\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n   //console.log(this.currentUser);\n  }\n\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n    <header class=\"jumbotron\">\n      <h3>\n        <strong>{{ currentUser.username }}</strong> Profile\n      </h3>\n    </header>\n    <p>\n      <strong>Token:</strong>\n      {{ currentUser.accessToken.substring(0, 20) }} ...\n      {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n    </p>\n    <p>\n      <strong>Email:</strong>\n      {{ currentUser.email }}\n    </p>\n    <strong>Roles:</strong>\n    <ul>\n      <li *ngFor=\"let role of currentUser.roles\">\n        {{ role }}\n      </li>\n    </ul>\n  </div>\n  \n  <ng-template #loggedOut>\n    Please login.\n  </ng-template>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { AppRoutingModule } from './app-routing.module';\nimport { AppRoutes } from './app.routes';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\nimport { BoardUserComponent } from './board-user/board-user.component';\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { AuthService } from './auth/auth.service';\n//import { RoleGuardService } from './auth/role-guard.service';\nimport { HeaderComponent } from './header/header.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown'\nimport { JwtHelperService,JWT_OPTIONS  } from '@auth0/angular-jwt';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BoardAdminComponent,\n    BoardModeratorComponent,\n    BoardUserComponent,\n    HeaderComponent \n    \n  ],\n  imports: [\n    BrowserModule,\n    //AppRoutingModule,\n    AppRoutes,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule ,\n    BsDropdownModule.forRoot()\n  ],\n  providers: [authInterceptorProviders,AuthService, AuthGuardService,JwtHelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'; \nimport  jwt_decode from 'jwt-decode';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\n\nexport class HeaderComponent implements OnInit {\n\n  title = 'authTest';\n  private roles: string[];\n  isLoggedIn = false; \n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string; \n  userrole:string;\n  token:string;\n  \n  constructor(private tokenStorageService: TokenStorageService , private httpClient : HttpClient,private http: HttpClient) { }\n   \n  ngOnInit(): void {\n   \n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser(); \n      this.roles = user.roles;\n      this.userrole=this.roles.length==1?this.roles[0]:this.roles[1];\n\n      this.showAdminBoard =this.userrole==\"admin\"?true:false;//.includes('ROLE_ADMIN');\n      this.showModeratorBoard =true; //this.roles.includes('ROLE_MODERATOR');\n      this.username = user.username;\n      this.token=user.accessToken;      \n      this.getLoggedInUser(this.token) ; \n     var decoded = jwt_decode(this.token);  \n     console.log(this.showAdminBoard); \n      \n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  } \n  \n  getLoggedInUser(toke) {  \n\n    var headers_object = new HttpHeaders().set(\"Authorization\", \"Bearer \" +toke);\n    const httpOptions = { headers: headers_object};\n\n    return this.http.get(\"http://localhost:61955/Api/Authenticate/getuser\").subscribe(resp => {\n       var data=resp;\n       //console.log(data);\n      });\n   \n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" href=\"#\">Recipe Book</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\n          <a href=\"/admin\" class=\"nav-link\" routerLink=\"admin\">Admin Board</a>\n        </li> \n        <li class=\"nav-item\">\n          <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">User</a>\n        </li> \n      </ul> \n    </div>\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\n      <li class=\"nav-item\">\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n      <div class=\"btn-group\" dropdown>\n        <button id=\"button-basic\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\n                aria-controls=\"dropdown-basic\">\n                {{username}} <span class=\"caret\"></span>\n        </button>\n        <ul id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu\"\n            role=\"menu\" aria-labelledby=\"button-basic\">\n          <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"/profile\" routerLink=\"profile\">Profile</a></li>\n          <li role=\"menuitem\"><a class=\"dropdown-item\" href  (click)=\"logout()\">LogOut</a></li>\n           \n          <!-- <li class=\"divider dropdown-divider\"></li>\n          <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Profile</a></li> -->\n        </ul>\n      </div>\n      \n    </ul>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n@Component({\n  selector: 'app-board-admin',\n  templateUrl: './board-admin.component.html',\n  styleUrls: ['./board-admin.component.css']\n})\nexport class BoardAdminComponent implements OnInit {\n\n  content: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getAdminBoard().subscribe(\n      data => {\n        this.content = data;\n      },\n      err => {\n        this.content = JSON.parse(err.error).message;\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n    <header class=\"jumbotron\">\n      <p>{{ content }}</p>\n    </header>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-moderator',\n  templateUrl: './board-moderator.component.html',\n  styleUrls: ['./board-moderator.component.css']\n})\nexport class BoardModeratorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>board-moderator works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { JwtModule ,JwtHelperService,JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  constructor(public jwtHelper: JwtHelperService,private token: TokenStorageService) {}\r\n  //constructor(private token: TokenStorageService) {}\r\n  // ...\r\n  public isAuthenticated(): boolean {\r\n     const token = this.token.getToken();\r\n     //console.log(token);\r\n     if(token==null){\r\n       return false; \r\n     }\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n    return true;//!this.jwtHelper.isTokenExpired(token);\r\n  }\r\n  \r\n}\r\n ","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n//const TOKEN_HEADER_KEY = 'x-access-token';\r\nconst TOKEN_HEADER_KEY=\"Authorization\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();    \r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n  onSubmit(): void {\n    this.authService.login(this.form).subscribe(\n      data => {\n        console.log('success');        \n        this.tokenStorage.saveToken(data.accessToken);\n        //console.log(data);\n        this.tokenStorage.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;        \n        this.reloadPage();\n      },\n      err => {\n        console.log(err);\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    //this.router.navigate(['']);\n    window.location.reload();\n  }\n\n}\n"," \n<div class=\"row m-1\"> \n<div class=\"col-md-12\">\n    <div class=\"card\">\n      <div class=\"card-body\"> \n      <form\n        *ngIf=\"!isLoggedIn\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\n        #f=\"ngForm\"\n        novalidate\n      >\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            [(ngModel)]=\"form.username\"\n            required\n            #username=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && username.invalid\"\n          >\n            Username is required!\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            required\n            minlength=\"6\"\n            #password=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && password.invalid\"\n          >\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">\n            Login\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && isLoginFailed\"\n          >\n            Login failed: {{ errorMessage }}\n          </div>\n        </div>\n      </form>\n  \n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>\n    </div>\n  </div>\n</div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}